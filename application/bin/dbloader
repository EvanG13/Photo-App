"use strict";
const mysql = require("mysql2/promise");

function displayWarningMessage(warning) {
  switch (warning.Code) {
    case 1007:
      console.log(`Skipping Database Creation --> ${warning.Message}`);
      break;
    case 1050:
      console.log(`Skipping Table Creation --> ${warning.Message}`);
      break;
  }
}

async function getConnection() {
  return await mysql.createConnection({
    host: "localhost",
    //TODO make sure to change to the user you want to use
    user: "root",     //Your DB username
    //TODO make sure to change to the correct password for your user.
    password: "1234", //Your DB password
    port: "3307"
  });
}

async function makeDatabase(connection) {
  //TODO make sure to change yourdbnamehere
  const [result, _] = await connection.query(
    "CREATE DATABASE IF NOT EXISTS csc317db;"
  );
  if (result && result.warningStatus > 0) {
    const [warningResult, _] = await connection.query("SHOW WARNINGS");
    displayWarningMessage(warningResult[0]);
  } else {
    console.log("Created Database!");
  }
}

async function makeUsersTable(connection) {
  try {
    const [result, _] = await connection.query(
      // Users Table SQL Goes here
      `
      CREATE TABLE users (
        id int NOT NULL AUTO_INCREMENT,
        username varchar(64) NOT NULL,
        password varchar(128) NOT NULL,
        email varchar(128) NOT NULL,
        active int NOT NULL DEFAULT '0',
        createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (id),
        UNIQUE KEY id_UNIQUE (id),
        UNIQUE KEY username_UNIQUE (username),
        UNIQUE KEY email_UNIQUE (email)
      ) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
      `
    );
  console.log("Created Users Table!");  
  }
  catch(err) {
    displayWarningMessage({Code: err.errno, Message: err.sqlMessage});
  }
}

async function makePostsTable(connection) {
  try {
    const [result, _] = await connection.query(
      // Posts Table SQL Goes here
      `
      CREATE TABLE posts (
        id int NOT NULL AUTO_INCREMENT,
        title varchar(1024) NOT NULL,
        description mediumtext NOT NULL,
        photo varchar(4096) NOT NULL,
        thumbnail varchar(4096) NOT NULL,
        active int NOT NULL DEFAULT '0',
        createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        fk_authorId int NOT NULL,
        PRIMARY KEY (id),
        KEY authorID_idx (fk_authorId),
        CONSTRAINT authorID FOREIGN KEY (fk_authorId) REFERENCES users (id)
        ) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
      `
    ); 
    console.log("Created Posts Table!");  
  }
  catch(err) {
    displayWarningMessage({Code: err.errno, Message: err.sqlMessage});
  }
}

async function makeCommentsTable(connection) {
  try {
    const [result, _] = await connection.query(
      // Comments Table SQL Goes here
      ` 
      CREATE TABLE comments (
        id int NOT NULL AUTO_INCREMENT,
        text mediumtext NOT NULL,
        fk_authorId int NOT NULL,
        fk_postId int NOT NULL,
        createdAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY (id),
        KEY commentAuthor_idx (fk_authorId),
        KEY postId_idx (fk_postId),
        CONSTRAINT commentAuthor FOREIGN KEY (fk_authorId) REFERENCES users (id),
        CONSTRAINT postId FOREIGN KEY (fk_postId) REFERENCES posts (id)
      ) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
      `
    );
    console.log("Created Comments Table!");
  }
  catch(err) {
    displayWarningMessage({Code: err.errno, Message: err.sqlMessage});
  }
}

(async function main() {
  let connection = null;
  try {
    connection = await getConnection();
    await makeDatabase(connection);      // make DB
    //TODO make sure to change yourdbnamehere
    await connection.query("USE csc317db");  // set new DB to the current DB
    await makeUsersTable(connection);    // try to make user table
    await makePostsTable(connection);    // try to make posts table
    await makeCommentsTable(connection); // try to make comments table
    connection.close();
    return;
  } catch (error) {
    console.error(error);
    if (connection != null) {
      connection.close();
    }
  }
})();
